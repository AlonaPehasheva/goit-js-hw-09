{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Виконуй це завдання у файлах 2-form.html і 2-form.js. Розбий його на декілька підзавдань:\n\n// Оголоси поза будь-якими функціями об’єкт formData з полями email та message, які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n// Використовуй метод делегування для відстеження змін у формі через подію input. Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище. Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі. Якщо так, використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n\nlet formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector('.feedback-form');\nconst localStorageKey = 'feedback-form-state';\n\nform.addEventListener('input', e => {\n  const email = e.currentTarget.elements.email.value;\n  const message = e.currentTarget.elements.message.value;\n  formData.email = email;\n  formData.message = message;\n  saveToLS(localStorageKey, formData);\n});\n\nfunction saveToLS(key, value) {\n  const jsonData = JSON.stringify(value);\n  localStorage.setItem(key, jsonData);\n}\n\nconst saveData = localStorage.getItem('feedback-form-state');\nif (saveData) {\n  try {\n    const formDataSave = JSON.parse(saveData);\n    form.elements.email.value = formDataSave.email;\n    form.elements.message.value = formDataSave.message;\n  } catch (error) {\n    console.log(error.name);\n  }\n} else {\n  formData = {};\n}\n\n// Перед відправленням форми переконайся, що обидва поля форми заповнені. Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields». Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  if (formData.email === '' || formData.message === '') {\n    alert('Fill please all fields');\n  }\n  console.log({ ...formData });\n  localStorage.removeItem('feedback-form-state');\n  form.reset();\n  formData = {\n    email: '',\n    message: '',\n  };\n});\n"],"names":["formData","form","localStorageKey","email","message","saveToLS","key","value","jsonData","saveData","formDataSave","error","evt"],"mappings":"wFAMA,IAAIA,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAEA,MAAMC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAkB,sBAExBD,EAAK,iBAAiB,QAAS,GAAK,CAClC,MAAME,EAAQ,EAAE,cAAc,SAAS,MAAM,MACvCC,EAAU,EAAE,cAAc,SAAS,QAAQ,MACjDJ,EAAS,MAAQG,EACjBH,EAAS,QAAUI,EACnBC,EAASH,EAAiBF,CAAQ,CACpC,CAAC,EAED,SAASK,EAASC,EAAKC,EAAO,CAC5B,MAAMC,EAAW,KAAK,UAAUD,CAAK,EACrC,aAAa,QAAQD,EAAKE,CAAQ,CACpC,CAEA,MAAMC,EAAW,aAAa,QAAQ,qBAAqB,EAC3D,GAAIA,EACF,GAAI,CACF,MAAMC,EAAe,KAAK,MAAMD,CAAQ,EACxCR,EAAK,SAAS,MAAM,MAAQS,EAAa,MACzCT,EAAK,SAAS,QAAQ,MAAQS,EAAa,OAC7C,OAASC,EAAO,CACd,QAAQ,IAAIA,EAAM,IAAI,CACxB,MAEAX,EAAW,CAAA,EAKbC,EAAK,iBAAiB,SAAUW,GAAO,CACrCA,EAAI,eAAc,GACdZ,EAAS,QAAU,IAAMA,EAAS,UAAY,KAChD,MAAM,wBAAwB,EAEhC,QAAQ,IAAI,CAAE,GAAGA,EAAU,EAC3B,aAAa,WAAW,qBAAqB,EAC7CC,EAAK,MAAK,EACVD,EAAW,CACT,MAAO,GACP,QAAS,EACb,CACA,CAAC"}